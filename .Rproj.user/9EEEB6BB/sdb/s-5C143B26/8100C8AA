{
    "collab_server" : "",
    "contents" : "################################################################\n# Makefile for SWI-Prolog 7.x\n#\n# Author:\tJan Wielemaker\n#\t\tJ.Wielemake@cs.vu.nl\n#\t\tVU University Amsterdam\n#\t\tDe Boelelaan 1081a\n#\t\t1081 HV  Amsterdam\n#\t\tThe Netherlands\n#\n# This  Makefile  requires  GNU-Make,  often  installed  as  `gmake'  on\n# Non-Linux systems.\n#\n# Public targets:\n#\n#\t* make\t\t\tSimply makes all programs in the current tree\n#\t* make install\t\tInstalls the libraries and public executables\n#\t* make install-bins\tLink executables from $(bindir)\n#\t* make install-arch\tInstall machine dependent files\n#\t* make install-libs\tInstall machine independent files\n#\t* make install-lman\tInstall man files in Prolog lib hierarchy\n#\t* make check\t\tRun some tests\n#\n# Building a profile-based version using gcc:\n#\n#       * make OPTIMISE=prof [PROFILE_SRC=<file>] [PROFILE_GOAL=<goal>]\n#\n# Copyright (C) University of Amsterdam\n#\t\tVU University Amsterdam\n#\n# Copyright policy:\n#\n#\t* BSD-2 (see file LICENSE or http://www.swi-prolog.org/)\n################################################################\n\n.SUFFIXES: .i .pl\n\nprefix=/usr/local\nexec_prefix=${prefix}\nsrcdir=.\nvpath %.c .\nbindir=${exec_prefix}/bin\nlibdir=${exec_prefix}/lib\ndatarootdir=${prefix}/share\nmandir=${datarootdir}/man\nmansec=1\nlmansec=3\nsmandir=$(mandir)/man$(mansec)\nlmandir=$(mandir)/man$(lmansec)\nplmandir=$(PLBASE)/man\n\nPLVERSION=7.5.1\nPLNVERSION=7.5.1\nPL=swipl\nPLWIN=swipl-win\nPLBASE=/usr/local/swipl-7.5.1\nBOOTFILE=boot64.prc\n\nCC=gcc\nLDEXE=gcc\nEXEEXT = .exe\nTXTEXT=.TXT\nLIBS=-limagehlp -ldbghelp -lm -lpthread -lwsock32 -lwinmm -lshell32 \nAWK=gawk\nSED=sed\nCHRPATH=:\nETAGS=:\nAR=ar\nRANLIB=ranlib\nWINDRES=windres\nWINE=:\nMSLIBEXE=:\nPLBUILD=i386-win32\nPLARCH=i386-win32\nINSTALL_PLARCH=\nINSTALL=/bin/install -c\nINSTALL_PROGRAM=${INSTALL}\nINSTALL_SHOBJ=${INSTALL}\nINSTALL_SCRIPT=${INSTALL}\nINSTALL_DATA=${INSTALL} -m 644\nMKDIR=mkdir -p\nREL_LN=$(srcdir)/rel-ln\nRLPREFIX=\n\nCOFLAGS=-O2 -fno-strict-aliasing\nCWFLAGS=-Wall\nCIFLAGS=\nCMFLAGS= -D__WINDOWS__ -DWIN32\nCPFLAGS=\nCFLAGS=\t$(CWFLAGS) $(COFLAGS) $(CIFLAGS) $(CMFLAGS) $(CPFLAGS)\nLDFLAGS= $(CPFLAGS)\nLDOFLAGS=-O2\nSTACKFLAGS=-Wl,--stack,4000000\nSUBSYSTEMFLAGS=-Wl,--subsystem,windows\n\nMINGW=true\nMINGWPTHREAD=libwinpthread-1\nDEFSTARTUP=swipl.ini\n\nHOST_TOOLCHAIN_FLAG=-DHOST_TOOLCHAIN_MINGW\nHOST_OS_FLAG=-DHOST_OS_WINDOWS\n\nCC_FOR_BUILD = gcc\nEXEEXT_FOR_BUILD = .exe\n\nPB=../boot\nINCLUDEDIR=../include\nEXPORTS=$(INCLUDEDIR)/SWI-Exports\nCINCLUDE=$(INCLUDEDIR)/SWI-Prolog.h\nSTREAMH=$(INCLUDEDIR)/SWI-Stream.h\nSTARTUPPATH=$(PL).prc\nRUNTIMEDIR=../lib/$(PLARCH)\nPLLIB=libswipl.a\nLNLIBS=-limagehlp -ldbghelp -lm -lpthread -lwsock32 -lwinmm -lshell32 \nXLIBS= -lgdi32 -lcomdlg32\nDBGLIBS=\nUSEPLLIB=-lswipl\nifeq (unknown,ELF)\nLIBPLSO=\nelse\nLIBPLSO=-lswipl\nendif\nRUNTIME=$(RUNTIMEDIR)/$(PLLIB)\nSOEXT=dll\nSOLIB=bin\nSHARED=libswipl.dll\nSHAREDV=$(SHARED).$(PLVERSION)\nSONAME=$(SHARED).7.5\nSONAMEOPT=-Wl,-soname=$(SONAME) -Wl,--out-implib,$(RUNTIMEDIR)/libswipl.$(SOEXT).a -Wl,--output-def,$(RUNTIMEDIR)/libswipl.def\nLIBRARYDIR=${PLBASE}/library\nPLCUSTOM=${PLBASE}/customize\nMKLIBS=staticlib\nDEVPL=./swipl.sh\n\ninclude $(srcdir)/common.mk\n\n# MacOS\nLIBPL_INSTALL_NAME=$(PLBASE)/lib/$(INSTALL_PLARCH)/$(SHARED)\n\nOBJ+=\t$(OSOBJ)\nXOBJ=\t pl-nt.o pl-ntconsole.o pl-dde.o\nRCOBJ=\trc/access.o rc/build.o rc/html.o rc/util.o\nTAIOBJ= libtai/caltime_utc.o libtai/caltime_tai.o libtai/leapsecs_sub.o \\\n\tlibtai/leapsecs_add.o libtai/caldate_fmjd.o libtai/caldate_mjd.o \\\n\tlibtai/leapsecs_init.o libtai/leapsecs_read.o libtai/tai_pack.o \\\n\tlibtai/tai_unpack.o\nLIBOBJ= $(RCOBJ) $(TAIOBJ)\nDEPLIBS=uxnt-lib plterm-lib rc-lib tai-lib $(MKLIBS)\n\nPLOBJ=\tpl-main.o\n\nALLOBJ= $(OBJ) $(PLOBJ) $(XOBJ)\n\nPLINIT=\t$(PB)/init.pl\nifeq ($(MINGW),true)\nPLSRC+= ../boot/menu.pl\nPLOSLIBS=dde.pl progman.pl\nendif\n\nINCSRC=\tpl-index.c pl-alloc.c pl-fli.c\nSRC=\t$(OBJ:.o=.c) $(PLOBJ:.o=.c) $(INCSRC)\nHDR=\tconfig.h parms.h pl-buffer.h pl-ctype.h pl-incl.h SWI-Prolog.h \\\n\tpl-init.h pl-os.h pl-data.h\n\nCOMMON= README\nUNICODE=blocks.pl unicode_data.pl\nbuilddirs=../lib ../lib/$(PLARCH) os\n\n# OPTIMISE=noprof: normal build; prof: build twice, using profiling\n# information to optimise branches.  Normally set through\n# configure --enable-useprofile\nOPTIMISE=noprof\nPROFILE_SRC=../bench/run.pl\nPROFILE_GOAL=run(0.5)\n\nall:\tbanner gitversion dirs $(OPTIMISE) swipl-ld$(EXEEXT)\n\nnoprof:\tsystem headers plwin startup index\nprof:\n\t\t$(MAKE) clean profclean\n\t\t$(MAKE) CPFLAGS=-fprofile-generate noprof\n\t\t$(DEVPL) -f none -s $(PROFILE_SRC) -q -g '$(PROFILE_GOAL),halt' -t 'halt(1)'\n\t\t$(MAKE) clean\n\t\t$(MAKE) CPFLAGS=-fprofile-use noprof\n\t\t$(MAKE) profclean\n\n.c.o:\n\t$(CC) -c -I. -I$(srcdir) -I$(srcdir)/rc $(CFLAGS) $< -o $@\n.c.i:\n\t$(CC) -E -I. -I$(srcdir) -I$(srcdir)/rc $(CFLAGS) $< -o $@\n\n.PHONY:\tsystem startup headers starticlib sharedlib index banner\n\nsystem:\t\t$(PL)$(EXEEXT)\nstartup:\t$(STARTUPPATH)\nheaders:\tparms.h $(CINCLUDE) $(STREAMH) \nstaticlib:\t$(RUNTIME)\nsharedlib:\t$(RUNTIMEDIR)/$(SHARED)\nindex:\t\t../library/INDEX.pl\n\nbanner:\n\t\t@echo \"****************\"\n\t\t@echo \"Making SWI-Prolog $(PLVERSION) for $(PLARCH)\"\n\t\t@echo \"To be installed in $(bindir)/$(PL)$(EXEEXT)\"\n\t\t@echo \"Home (libraries) in $(PLBASE)\"\n\t\t@echo \"****************\"\n\n\n# $(CHRPATH) -c changes ELF DT_RPATH into DT_RUNPATH.  The latter can\n# be overruled using LD_LIBRARY_PATH, which is what we need to be able\n# to run our local copy of SWI-Prolog.\n\n$(PL)$(EXEEXT):\t$(DEPLIBS) $(PLOBJ) $(OSLIB)\n\t\t$(LDEXE) $(LDFLAGS) $(STACKFLAGS) -o $@ $(PLOBJ) -L../lib/$(PLARCH) $(USEPLLIB) $(LNLIBS) $(OSLIB) $(DBGLIBS)\n\t\t$(CHRPATH) -c $@ || true\n\n$(STARTUPPATH):\t$(PLINIT) $(PLSRC) $(PL)$(EXEEXT)\n\t\trm -f $(STARTUPPATH)\n\t\t$(DEVPL) -O -o $(STARTUPPATH) -b $(PLINIT)\n\t\tls -l $(STARTUPPATH)\n\n.PHONY: dirs\ndirs:\n\t\t@for d in $(builddirs); do \\\n\t\t  if [ ! -d $$d ]; then mkdir $$d; fi; \\\n\t\tdone\n\n$(RUNTIME):\tdirs $(OBJ) $(LIBOBJ) $(XOBJ)\n\t\trm -f $@\n\t\t$(AR) r $@ $(OBJ) $(LIBOBJ) $(XOBJ)\n\t\t$(RANLIB) $@\n\nifeq ($(SOEXT),dylib)\n$(RUNTIMEDIR)/$(SHARED):\tdirs $(OBJ) $(LIBOBJ) $(XOBJ)\n\t\t$(CC) -dynamiclib -current_version $(PLNVERSION) \\\n\t\t\t-install_name $(LIBPL_INSTALL_NAME) \\\n\t\t\t$(COFLAGS) -o $@ \\\n\t\t\t$(OBJ) $(LIBOBJ) $(XOBJ) $(LDFLAGS) $(LDOFLAGS) $(LIBS)\nelse\nifeq ($(SOEXT),dll)\n$(RUNTIMEDIR)/$(SHARED):\tdirs $(OBJ) $(LIBOBJ) $(XOBJ) $(OSLIB)\n\t\t$(CC) -shared $(COFLAGS) -o $@ $(SONAMEOPT) \\\n\t\t  $(OBJ) $(LIBOBJ) $(XOBJ) $(LDFLAGS) $(LDOFLAGS) $(OSLIB) $(LIBS)\n\t\t(cd $(RUNTIMEDIR) && $(MSLIBEXE) /def:libswipl.def)\nelse\n$(RUNTIMEDIR)/$(SHAREDV):\tdirs $(OBJ) $(LIBOBJ) $(XOBJ)\n\t\t$(CC) -shared $(COFLAGS) -o $@ $(SONAMEOPT) \\\n\t\t\t$(OBJ) $(LIBOBJ) $(XOBJ) $(LDFLAGS) $(LDOFLAGS)\t$(LIBS)\n\n$(RUNTIMEDIR)/$(SHARED):\t$(RUNTIMEDIR)/$(SHAREDV)\n\t\t( cd ../lib/$(PLARCH) && rm -f $(SHARED) && ln -s $(SHAREDV) $(SHARED) )\n\t\t( cd ../lib/$(PLARCH) && rm -f $(SONAME) && ln -s $(SHAREDV) $(SONAME) )\nendif\nendif\n\nifeq ($(MINGW),true)\nOSLIB=\t../lib/$(PLARCH)/libuxnt.a\n\n$(OSLIB):\tuxnt-lib\nuxnt-lib:\n\t\t@(cd os/windows && $(MAKE) COFLAGS=\"$(COFLAGS)\")\n\nplterm-lib:\n\t\t@(cd win32/console && $(MAKE) COFLAGS=\"$(COFLAGS)\")\n\nplwin:\t\t$(PLWIN)$(EXEEXT)\n\nswipl-res.o:\t$(srcdir)/swipl.rc $(srcdir)/swipl.ico\n\t\t$(WINDRES) -o $@ $<\n\npl-ntmain.o:\tpl-ntmain.c\n\t$(CC) -c -I. -I$(srcdir) -I$(srcdir)/rc -I$(srcdir)/os $(CFLAGS) $< -o $@\n\n$(PLWIN)$(EXEEXT):\tswipl-res.o pl-ntmain.o $(DEPLIBS) $(OSLIB)\n\t$(LDEXE) $(LDFLAGS) $(STACKFLAGS) $(SUBSYSTEMFLAGS) \\\n\t\t-o $@ swipl-res.o pl-ntmain.o -L../lib/$(PLARCH) -lplterm \\\n\t\t$(USEPLLIB) $(LNLIBS) $(XLIBS) $(LIBS) $(OSLIB) $(DBGLIBS)\n\nelse\nOSLIB=\n\nuxnt-lib:\nplterm-lib:\nplwin:\nendif\n\nrc-lib:\t\t$(RCOBJ)\n\t\t@(cd rc && $(MAKE) COFLAGS=\"$(COFLAGS)\")\ntai-lib:\t$(TAIOBJ)\n\t\t@(cd libtai && $(MAKE) COFLAGS=\"$(COFLAGS)\")\n\n../library/INDEX.pl:\t../library ../library/[a-z]*.pl $(DEVPL) $(STARTUPPATH)\n\t\t$(DEVPL) -x $(STARTUPPATH) \\\n\t\t\t-f none -F none \\\n\t\t\t-g make_library_index\\(\\'../library\\'\\) \\\n\t\t\t-t halt\n\n$(INCLUDEDIR):\n\t\tif [ ! -d $@ ]; then $(MKDIR) $@; fi\n\n# Create SWI-Exports, used for importing and exporting symbols on behalf of\n# the AIX version.\n\nexports:\t$(EXPORTS)\n\n$(EXPORTS):\tMakefile $(srcdir)/SWI-Prolog.h $(INCLUDEDIR)\n\t\techo \\#\\!$(bindir)/$(PL)$(EXEEXT) > $@\n\t\tgrep '^PL_EXPORT' $(srcdir)/SWI-Prolog.h $(srcdir)/SWI-Stream.h | \\\n\t\t    $(SED) -e 's/.*[\t*]\\(_*PL_[a-zA-Z0-9_]*\\).*/\\1/' \\\n\t\t\t   -e 's/.*[\t*]\\(S[a-zA-Z_]*\\).*/\\1/' | \\\n\t\t    grep -v '_t$$' | grep -v '^PL_extension$$' | \\\n\t\t    grep -v PL_w32thread_raise | grep -v PL_win_message_proc | \\\n\t\t    grep -v PL_w32_wrap_ansi_console | \\\n\t\t    grep -v PL_wait_for_console_input | \\\n\t\t    grep -v Swinsock | \\\n\t\t    sort -u >> $@\n\n$(CINCLUDE):\t$(srcdir)/SWI-Prolog.h $(INCLUDEDIR)\n\t\tcp $(srcdir)/SWI-Prolog.h $(CINCLUDE)\n\n$(STREAMH):\t$(srcdir)/os/SWI-Stream.h $(INCLUDEDIR)\n\t\tcp $(srcdir)/os/SWI-Stream.h $@\n\nparms.h:\tMakefile\n\t\t@echo \"#ifndef PLHOME\"\t\t\t\t> $@%\n\t\t@echo \"#define PLHOME       \\\"$(PLBASE)\\\"\"     >> $@%\n\t\t@echo \"#endif\"\t\t\t\t       >> $@%\n\t\t@echo \"#ifndef DEFSTARTUP\"\t\t       >> $@%\n\t\t@echo \"#define DEFSTARTUP   \\\"$(DEFSTARTUP)\\\"\" >> $@%\n\t\t@echo \"#endif\"\t\t\t\t       >> $@%\n\t\t@echo $(PLVERSION) | \\\n\t\t$(AWK) -F. '{ printf(\"#define PLVERSION %d\\n\", $$1 * 10000 + $$2 * 100 + $$3); }' >> $@%\n\t\t@echo \"#ifndef PLARCH\"\t\t\t       >> $@%\n\t\t@echo \"#define PLARCH\t    \\\"$(PLARCH)\\\"\"     >> $@%\n\t\t@echo \"#endif\"\t\t\t\t       >> $@%\n\t\t@echo \"#define C_LIBS\t    \\\"$(LNLIBS)\\\"\"     >> $@%\n\t\t@echo \"#define C_PLLIB\t    \\\"$(USEPLLIB)\\\"\"   >> $@%\n\t\t@echo \"#define C_LIBPLSO    \\\"$(LIBPLSO)\\\"\"    >> $@%\n\t\t@echo \"#ifndef C_CC\"\t\t\t       >> $@%\n\t\t@echo \"#define C_CC\t    \\\"$(CC)\\\"\"\t       >> $@%\n\t\t@echo \"#endif\"\t\t\t\t       >> $@%\n\t\t@echo \"#ifndef C_CFLAGS\"\t\t       >> $@%\n\t\t@echo \"#define C_CFLAGS\t    \\\"$(CMFLAGS) $(CIFLAGS)\\\"\" >> $@%\n\t\t@echo \"#endif\"\t\t\t\t       >> $@%\n\t\t@echo \"#ifndef C_LDFLAGS\"\t\t       >> $@%\n\t\t@echo \"#define C_LDFLAGS    \\\"$(LDFLAGS)\\\"\"    >> $@%\n\t\t@echo \"#endif\"\t\t\t\t       >> $@%\n\t\t@if cmp -s $@% $@; then rm $@%; else mv $@% $@; fi\n\n.PHONY: gitversion\ngitversion:\n\t\t@$(srcdir)/mkversion.sh\nversion.h:\tgitversion\npl-version.o:\tversion.h\n\n$(ALLOBJ):\tparms.h \\\n\t\t$(srcdir)/pl-funct.ih $(srcdir)/pl-vmi.h \\\n\t\t$(srcdir)/pl-inline.h\npl-wam.o:\tpl-alloc.c pl-index.c pl-fli.c pl-vmi.c \\\n\t\t$(srcdir)/pl-vmi.h $(srcdir)/pl-jumptable.ic \\\n\t\t$(srcdir)/pl-codelist.h\npl-prims.o:\tpl-termwalk.c\npl-rec.o:\tpl-termwalk.c\npl-copyterm.o:\tpl-termwalk.c\npl-arith.o:\t$(srcdir)/pl-segstack.h\npl-comp.o:\t$(srcdir)/pl-vmi.h\npl-read.o:\tpl-umap.c\npl-prof.o:\tpentium.c\nos/pl-dtoa.o:\tos/dtoa.c\npl-text.o:\t$(srcdir)/pl-codelist.h\npl-codetable.o: $(srcdir)/pl-codetable.c\n$(srcdir)/pl-vmi.h $(srcdir)/pl-jumptable.ic $(srcdir)/pl-codetable.c: $(srcdir)/.vmi-sentinel\n$(srcdir)/.vmi-sentinel:\t$(srcdir)/pl-vmi.c mkvmi$(EXEEXT_FOR_BUILD)\n\t\t./mkvmi$(EXEEXT_FOR_BUILD) \"$(srcdir)\"\n\t\t@touch $@\n\nmkvmi$(EXEEXT_FOR_BUILD):\tmkvmi.c\n\t\t$(CC_FOR_BUILD) -g -O2 -o $@ $(srcdir)/mkvmi.c\n\n\nifdef RLPREFIX\nos/pl-rl.o:\tos/pl-rl.c\n\t\t$(CC) -c -I$(RLPREFIX)/include -I. -I$(srcdir) -I$(srcdir)/rc $(CFLAGS) $< -o $@\nendif\n\n$(srcdir)/pl-funct.ih $(srcdir)/pl-atom.ih: $(srcdir)/.defatom-sentinel\n$(srcdir)/.defatom-sentinel: $(srcdir)/ATOMS defatom\n\t\t./defatom \"$(srcdir)\"\n\t\t@touch $@\n\ndefatom:\tdefatom.c\n\t\t$(CC) $(CFLAGS) -o $@ $(srcdir)/defatom.c\n\nswipl-ld$(EXEEXT):\t$(srcdir)/swipl-ld.c parms.h $(srcdir)/pl-vmi.h $(srcdir)/pl-atom.ih $(OSLIB)\n\t$(CC) $(LDFLAGS) $(HOST_TOOLCHAIN_FLAG) $(HOST_OS_FLAG) \\\n\t\t-I. -I$(srcdir) $(CFLAGS) -o $@ $(srcdir)/swipl-ld.c $(OSLIB) $(DBGLIBS)\n\n.PHONY: tags\ntags:\n\t\t(cd $(srcdir) && $(ETAGS) *.[ch] os/*.[ch] rc/*.[ch])\n\ncppout:\t\tgitversion parms.h $(ALLOBJ:.o=.i) $(LIBOBJ:.o=.i)\n\n.PHONY: check\ncheck:\n\t\t$(DEVPL) -q -f $(srcdir)/test.pl -O -F none -g test,halt -t 'halt(1)'\n\n.PHONY: check-installation\ncheck-installation:\n\t\t$(bindir)/$(PL)$(EXEEXT) -g check_installation,halt -t 'halt(1)'\n\n.PHONY: ln-install install dv-install\n\nln-install:\n\t\t@$(MAKE) INSTALL_DATA=`pwd`/../packages/ln-install \\\n\t\t\t INSTALL_SHOBJ=`pwd`/../packages/ln-install \\\n\t\t\t install\n\ninstall:\tdv-install\n\nifeq ($(MINGW),true)\ndv-install:\tdv-install-common install-mingw install-readme\nelse\ndv-install:\tdv-install-common install-bins install-pkgconfig install-man\nendif\n\n.PHONY: dv-install-common install-arch install-libs html-install\n\ndv-install-common:\tinstall-arch install-libs html-install\n\ninstall-bins:\tinstall-arch\n\t\t-if [ ! -d $(DESTDIR)$(bindir)  ]; then $(MKDIR) $(DESTDIR)$(bindir); fi\n\t\tfor f in $(PL)$(EXEEXT) swipl-ld$(EXEEXT) swipl-rc$(EXEEXT); do \\\n\t\t    $(REL_LN) $(DESTDIR)$(PLBASE)/bin/$(INSTALL_PLARCH)/$$f $(DESTDIR)$(bindir); \\\n\t\tdone\n\ninstall-arch:\tidirs iruntime\n\t\tfor f in $(PL)$(EXEEXT) swipl-ld$(EXEEXT) rc/swipl-rc$(EXEEXT); do \\\n\t\t    $(INSTALL_PROGRAM) $$f $(DESTDIR)$(PLBASE)/bin/$(INSTALL_PLARCH); \\\n\t\tdone\n\ninstall-libs:\tidirs iboot ilib iruntime iinclude icustom install-demo\n\t\t$(INSTALL_DATA) $(STARTUPPATH) \"$(DESTDIR)$(PLBASE)/$(BOOTFILE)\"\n\t\techo . > \"$(DESTDIR)$(PLBASE)/swipl.home\"\n\t\techo .. > \"$(DESTDIR)$(PLBASE)/bin/swipl.home\"\n\t\t$(DEVPL) -C \"$(DESTDIR)$(PLBASE)\" -f none -F none \\\n\t\t\t-g 'make_library_index(library)' \\\n\t\t\t-t halt\n\n.PHONY:\tinstall-mingw install-plterm install-plwin install-mkboot install-icon iruntime\n\ninstall-mingw:\tinstall-plterm install-plwin install-mkboot install-icon\n\ninstall-plterm:\tidirs\n\t\tif [ -f $(RUNTIMEDIR)/plterm.$(SOEXT) ]; then \\\n\t\t  $(INSTALL_SHOBJ) $(RUNTIMEDIR)/plterm.$(SOEXT) $(DESTDIR)$(PLBASE)/$(SOLIB)/$(INSTALL_PLARCH) ; \\\n\t\t  $(INSTALL_DATA) $(RUNTIMEDIR)/plterm.$(SOEXT).a $(DESTDIR)$(PLBASE)/lib/$(INSTALL_PLARCH) ; \\\n\t\tfi\n\t\t$(INSTALL_DATA) ../include/console.h $(DESTDIR)$(PLBASE)/include/plterm.h\n\ninstall-plwin:\tidirs iruntime\n\t\t$(INSTALL_PROGRAM) $(PLWIN)$(EXEEXT) $(DESTDIR)$(PLBASE)/bin/$(INSTALL_PLARCH)\n\ninstall-mkboot:\tidirs\n\t\t$(INSTALL_DATA) $(srcdir)/win32/misc/mkboot.bat $(DESTDIR)$(PLBASE)/bin/$(INSTALL_PLARCH)\n\ninstall-icon:\tidirs\n\t\t$(INSTALL_DATA) $(srcdir)/swipl.ico \"$(DESTDIR)$(PLBASE)\"\n\ninstall-demo:\tidirs\n\t\t$(INSTALL_DATA) ../demo/likes.pl $(DESTDIR)$(PLBASE)/demo\n\t\t$(INSTALL_DATA) ../demo/README $(DESTDIR)$(PLBASE)/demo/README$(TXTEXT)\n\ninstalldirs=\tbin bin/$(INSTALL_PLARCH) lib lib/$(INSTALL_PLARCH) boot \\\n\t\tdemo customize \\\n\t\tinclude include/sicstus include/Yap \\\n\t\tlibrary \\\n\t\tlibrary/clp library/unicode library/dcg \\\n\t\tlibrary/dialect library/dialect/yap library/dialect/iso \\\n\t\tlibrary/dialect/sicstus \\\n\t\tlibrary/dialect/eclipse \\\n\t\tlibrary/dialect/swi \\\n\t\tlibrary/dialect/ifprolog \\\n\t\tlibrary/dialect/hprolog\n\n.PHONY: iruntime install-implib\n\niruntime:\tidirs\n\t\tif [ -f $(RUNTIME) ]; then \\\n\t\t  $(INSTALL_DATA) $(RUNTIME) $(DESTDIR)$(PLBASE)/lib/$(INSTALL_PLARCH); \\\n\t\t  $(RANLIB) $(DESTDIR)$(PLBASE)/lib/$(INSTALL_PLARCH)/$(PLLIB); \\\n\t\tfi\nifeq ($(SOEXT),dylib)\n\t\tif [ -f $(RUNTIMEDIR)/$(SHARED) ]; then \\\n\t\t  $(INSTALL_DATA) $(RUNTIMEDIR)/$(SHARED) $(DESTDIR)$(PLBASE)/$(SOLIB)/$(INSTALL_PLARCH) ; \\\n\t\tfi\nelse\nifeq ($(SOEXT),dll)\n\t\tif [ -f $(RUNTIMEDIR)/$(SHARED) ]; then \\\n\t\t  $(INSTALL_SHOBJ) $(RUNTIMEDIR)/$(SHARED) $(DESTDIR)$(PLBASE)/bin/$(INSTALL_PLARCH) ; \\\n\t\t  $(INSTALL_DATA) $(RUNTIMEDIR)/libswipl.dll.a $(DESTDIR)$(PLBASE)/lib/$(INSTALL_PLARCH) ; \\\n\t\t  if [ \"$(MSLIBEXE)\" != \":\" ]; then \\\n\t\t    $(INSTALL_DATA) $(RUNTIMEDIR)/libswipl.def $(DESTDIR)$(PLBASE)/lib/$(INSTALL_PLARCH) ; \\\n\t\t  fi ; \\\n\t\t  if [ -f $(RUNTIMEDIR)/libswipl.lib ]; then \\\n\t\t    $(INSTALL_DATA) $(RUNTIMEDIR)/libswipl.lib $(DESTDIR)$(PLBASE)/lib/$(INSTALL_PLARCH) ; \\\n\t\t  fi ; \\\n\t\tfi\nelse\n\t\tif [ -f $(RUNTIMEDIR)/$(SHAREDV) ]; then \\\n\t\t  $(INSTALL_SHOBJ) $(RUNTIMEDIR)/$(SHAREDV) $(DESTDIR)$(PLBASE)/$(SOLIB)/$(INSTALL_PLARCH) ; \\\n\t\t( cd $(DESTDIR)$(PLBASE)/lib/$(INSTALL_PLARCH) && rm -f $(SHARED) && ln -s $(SHAREDV) $(SHARED) ) ; \\\n\t\t( cd $(DESTDIR)$(PLBASE)/lib/$(INSTALL_PLARCH) && rm -f $(SONAME) && ln -s $(SHAREDV) $(SONAME) ) ; \\\n\t\tfi\nendif\nendif\n\ninstall-implib:\tidirs\n\t\t$(INSTALL_DATA) libswiplimp.a $(DESTDIR)$(PLBASE)/lib/$(INSTALL_PLARCH)\n\n.PHONY:\tidirs iboot ilib iclp idcg idialect iswi iyap iifprolog ihprolog isicstus iiso ieclipse iunicode \\\n\ticustom iinclude install-pkgconfig install-man install-lman install-readme html-install\n\nidirs:\n\t\tif [ ! -d $(DESTDIR)$(libdir)  ]; then $(MKDIR) $(DESTDIR)$(libdir); fi\n\t\tif [ ! -d $(DESTDIR)$(PLBASE) ]; then $(MKDIR) $(DESTDIR)$(PLBASE); fi\n\t\tfor d in $(installdirs); do \\\n\t\t\tif [ ! -d $(DESTDIR)$(PLBASE)/$$d ]; then \\\n\t\t\t\t$(MKDIR) $(DESTDIR)$(PLBASE)/$$d; \\\n\t\t\tfi; \\\n\t\tdone\n\n\niboot:\t\tidirs\n\t\tfor f in $(PLINIT) $(PLSRC); do $(INSTALL_DATA) $$f $(DESTDIR)$(PLBASE)/boot; done\n\nilib:\t\tidirs iclp idcg idialect iunicode\n\t\tfor f in $(PLLIBS) $(PLOSLIBS); do \\\n\t\t\t$(INSTALL_DATA) ../library/$$f $(DESTDIR)$(PLBASE)/library; \\\n\t\tdone\n\niclp:\t\tidirs\n\t\tfor f in $(CLP); do \\\n\t\t\t$(INSTALL_DATA) ../library/clp/$$f $(DESTDIR)$(PLBASE)/library/clp; \\\n\t\tdone\n\nidcg:\t\tidirs\n\t\tfor f in $(DCG); do \\\n\t\t\t$(INSTALL_DATA) ../library/dcg/$$f $(DESTDIR)$(PLBASE)/library/dcg; \\\n\t\tdone\n\nidialect:\tidirs iswi iyap iiso isicstus iifprolog ihprolog ieclipse\n\t\tfor f in $(DIALECT); do \\\n\t\t\t$(INSTALL_DATA) ../library/dialect/$$f $(DESTDIR)$(PLBASE)/library/dialect; \\\n\t\tdone\n\niswi:\t\tidirs\n\t\tfor f in $(SWI); do \\\n\t\t\t$(INSTALL_DATA) ../library/dialect/swi/$$f $(DESTDIR)$(PLBASE)/library/dialect/swi; \\\n\t\tdone\n\niyap:\t\tidirs\n\t\tfor f in $(YAP); do \\\n\t\t\t$(INSTALL_DATA) ../library/dialect/yap/$$f $(DESTDIR)$(PLBASE)/library/dialect/yap; \\\n\t\tdone\n\t\t$(INSTALL_DATA) $(srcdir)/compat/YapInterface.h $(DESTDIR)$(PLBASE)/include/Yap/YapInterface.h\n\nieclipse:\tidirs\n\t\tfor f in $(ECLIPSE); do \\\n\t\t\t$(INSTALL_DATA) ../library/dialect/eclipse/$$f $(DESTDIR)$(PLBASE)/library/dialect/eclipse; \\\n\t\tdone\n\niifprolog:\tidirs\n\t\tfor f in $(IFPROLOG); do \\\n\t\t\t$(INSTALL_DATA) ../library/dialect/ifprolog/$$f $(DESTDIR)$(PLBASE)/library/dialect/ifprolog; \\\n\t\tdone\n\nihprolog:\tidirs\n\t\tfor f in $(HPROLOG); do \\\n\t\t\t$(INSTALL_DATA) ../library/dialect/hprolog/$$f $(DESTDIR)$(PLBASE)/library/dialect/hprolog; \\\n\t\tdone\n\nisicstus:\tidirs\n\t\tfor f in $(SICSTUS); do \\\n\t\t\t$(INSTALL_DATA) ../library/dialect/sicstus/$$f $(DESTDIR)$(PLBASE)/library/dialect/sicstus; \\\n\t\tdone\n\t\t$(INSTALL_DATA) $(srcdir)/compat/sicstus.h $(DESTDIR)$(PLBASE)/include/sicstus/sicstus.h\n\niiso:\t\tidirs\n\t\tfor f in $(ISO); do \\\n\t\t\t$(INSTALL_DATA) ../library/dialect/iso/$$f $(DESTDIR)$(PLBASE)/library/dialect/iso; \\\n\t\tdone\n\niunicode:\tidirs\n\t\tfor f in $(UNICODE); do \\\n\t\t\t$(INSTALL_DATA) ../library/unicode/$$f $(DESTDIR)$(PLBASE)/library/unicode; \\\n\t\tdone\n\nicustom:\t\tidirs\n\t\t$(INSTALL_DATA) ../customize/README $(DESTDIR)$(PLCUSTOM)/README$(TXTEXT)\nifeq ($(MINGW),true)\n\t\t$(INSTALL_DATA) ../customize/dotswiplrc $(DESTDIR)$(PLCUSTOM)/swipl.ini\n\t\t$(INSTALL_DATA) ../customize/dotxpcerc $(DESTDIR)$(PLCUSTOM)/xpce.ini\nelse\n\t\t$(INSTALL_DATA) ../customize/dotswiplrc $(DESTDIR)$(PLCUSTOM)\n\t\t$(INSTALL_DATA) ../customize/dotxpcerc $(DESTDIR)$(PLCUSTOM)\n\t\t$(INSTALL_SCRIPT) ../customize/edit $(DESTDIR)$(PLCUSTOM)\nendif\n\niinclude:\tidirs\n\t\tfor f in SWI-Prolog.h SWI-Exports SWI-Stream.h; do \\\n\t\t    if [ -f ../include/$$f ]; then \\\n\t\t\t$(INSTALL_DATA) ../include/$$f $(DESTDIR)$(PLBASE)/include; \\\n\t\t    fi; \\\n\t\tdone\n\ninstall-pkgconfig:\tidirs\n\t\tif [ ! -d $(DESTDIR)$(libdir)/pkgconfig ]; then $(MKDIR) $(DESTDIR)$(libdir)/pkgconfig; fi\n\t\t$(INSTALL_DATA) swipl.pc $(DESTDIR)$(libdir)/pkgconfig/\n\ninstall-man:\n\t\t-if [ ! -d $(DESTDIR)$(mandir) ]; then $(MKDIR) $(DESTDIR)$(mandir); fi\n\t\t-if [ ! -d $(DESTDIR)$(smandir)  ];    then $(MKDIR) $(DESTDIR)$(smandir); fi\n\t\t-$(INSTALL_DATA) swipl.1 $(DESTDIR)$(smandir)/$(PL).$(mansec)\n\t\t-$(INSTALL_DATA) $(srcdir)/swipl-rc.1 $(DESTDIR)$(smandir)/swipl-rc.$(mansec)\n\t\t-$(INSTALL_DATA) $(srcdir)/swipl-ld.1 $(DESTDIR)$(smandir)/swipl-ld.$(mansec)\n\ninstall-lman:\n\t\tif [ ! -d $(DESTDIR)$(plmandir) ]; then $(MKDIR) $(DESTDIR)$(plmandir); fi\n\t\t$(INSTALL_DATA) swipl.1 $(DESTDIR)$(plmandir)/$(PL).$(mansec)\n\t\t$(INSTALL_DATA) $(srcdir)/swipl-rc.1 $(DESTDIR)$(plmandir)/swipl-rc.$(mansec)\n\t\t$(INSTALL_DATA) $(srcdir)/swipl-ld.1 $(DESTDIR)$(plmandir)/swipl-ld.$(mansec)\n\ninstall-readme:\tidirs\n\t\t$(INSTALL_DATA) ../README.md $(DESTDIR)$(PLBASE)/README$(TXTEXT)\n\t\t$(INSTALL_DATA) ../VERSION $(DESTDIR)$(PLBASE)\n\t\t$(INSTALL_DATA) ../LICENSE $(DESTDIR)$(PLBASE)/LICENSE$(TXTEXT)\n\t\tif [ -f ../man/windows.html ]; then \\\n\t\t  $(INSTALL_DATA) ../man/windows.html $(DESTDIR)$(PLBASE)/doc; \\\n\t\tfi\n\nhtml-install:\n\t\tif [ -d ../man/Manual ]; then \\\n\t\t  if [ ! -d $(DESTDIR)$(PLBASE)/doc ]; then $(MKDIR) $(DESTDIR)$(PLBASE)/doc; fi; \\\n\t\t  if [ ! -d $(DESTDIR)$(PLBASE)/doc/Manual ]; then $(MKDIR) $(DESTDIR)$(PLBASE)/doc/Manual; fi; \\\n\t\t  for f in ../man/Manual/*.html ../man/Manual/*.gif; do \\\n\t\t    $(INSTALL_DATA) $$f $(DESTDIR)$(PLBASE)/doc/Manual; \\\n\t\t  done; \\\n\t\tfi\n\n################################################################\n# WINDOWS INSTALLER\n################################################################\n\nNSISDEFS=/DSWIPL=swipl /DPTHREAD=$(MINGWPTHREAD) /DZLIB=zlib1 /DBOOT=$(BOOTFILE) /DMINGW=1\nifneq (,$(findstring 64,$(PLARCH)))\nNSISDEFS+=/DWIN64\nendif\nNSISEXE=C:/Program Files (x86)/NSIS/makensis.exe\nSWIPLNSI=$(shell winepath -w \"$(PLBASE)/../swipl.nsi\")\n\n.PHONY: installer\ninstaller:\n\t\t$(INSTALL_DATA) $(srcdir)/win32/installer/options.ini \"$(PLBASE)/..\"\n\t\t$(INSTALL_DATA) $(srcdir)/win32/installer/swipl.nsi \"$(PLBASE)/..\"\n\t\t$(INSTALL_DATA) $(srcdir)/win32/installer/mkinstaller.pl \"$(PLBASE)/..\"\n\t\t$(WINE) \"$(NSISEXE)\" $(NSISDEFS) \"$(SWIPLNSI)\"\n\n\n#\n# Export (Linux binary distribution\n#\n\nexport: install-lman\n\t../scripts/make-export $(DESTDIR)$(PLBASE)\n\t$(INSTALL_SCRIPT) ../scripts/swipl.sh $(DESTDIR)$(PLBASE)/bin/swipl\n\t$(INSTALL_SCRIPT) ../scripts/swipl-ld.sh $(DESTDIR)$(PLBASE)/bin/swipl-ld\n\t$(INSTALL_SCRIPT) ../scripts/swipl-rc.sh $(DESTDIR)$(PLBASE)/bin/swipl-rc\n\t$(INSTALL_DATA) ../scripts/README.LinuxBin $(DESTDIR)$(PLBASE)/README$(TXTEXT)\n\n#\n# Cleanup\n#\n\nclean:\n\t\t[ ! -f os/windows/Makefile ] || $(MAKE) -C os/windows $@\n\t\t[ ! -f win32/console/Makefile ] || $(MAKE) -C win32/console $@\n\t\t[ ! -f rc/Makefile ] || $(MAKE) -C rc $@\n\t\t[ ! -f libtai/Makefile ] || $(MAKE) -C libtai $@\n\t\trm -f *.o $(ALLOBJ) os/*.o a.out core *~ #* parms.h\n\t\trm -rf *.dSYM\n\nprofclean:\n\t\t[ ! -f rc/Makefile ] || $(MAKE) -C rc $@\n\t\t[ ! -f libtai/Makefile ] || $(MAKE) -C libtai $@\n\t\trm -f *.gcda\n\ndistclean:\tclean profclean\n\t\t[ ! -f rc/Makefile ] || $(MAKE) -C rc $@\n\t\t[ ! -f libtai/Makefile ] || $(MAKE) -C libtai $@\n\t\t[ ! -f ../man/Makefile ] || $(MAKE) -C ../man $@\n\t\t(cd ../src && rm -f pl-atom.ic pl-atom.ih pl-funct.ic pl-funct.ih .defatom-sentinel)\n\t\t(cd ../src && rm -f pl-codetable.c pl-vmi.h pl-jumptable.ic .vmi-sentinel)\n\t\trm -f defatom mkvmi\n\t\trm -rf $(INCLUDEDIR) ../lib\n\t\trm -f ../library/INDEX.pl\n\t\trm -f Makefile config.h config.status parms.h version.h\n\t\trm -f $(DEVPL) swipl.home swiplbin $(STARTUPPATH)\n\t\trm -f $(PL)$(EXEEXT)\n\t\trm -f  swipl-ld$(EXEEXT)\n\t\trm -f  swipl.1 libswiplimp.a\n\t\trm -f config.log config.cache swipl.pc\n\t\trm -rf $(PACKAGE_TMPDIR)\n\nrealclean:\tclean\n\t\trm -f $(STARTUPPATH)\n\t\trm -f config.log config.cache\n\t\trm -rf $(PL)$(EXEEXT) ../startup ../include ../lib\n\n",
    "created" : 1487162157704.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "997289499",
    "id" : "8100C8AA",
    "lastKnownWriteTime" : 1487166699,
    "last_content_update" : 1487166699,
    "path" : "C:/Users/Matthias/Dropbox/rolog/rolog/src/swipl-7.5.1/src/Makefile",
    "project_path" : "src/swipl-7.5.1/src/Makefile",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "makefile"
}