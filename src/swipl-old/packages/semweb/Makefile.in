################################################################
# Makefile template for SWI-Prolog RDF-DB package
#
# This template is used by configure to create Makefile.  See
# the file INSTALL for further installation instructions.
#
# License: BSD-2
#
# Special targets:
#
#	ln-install		Install with symbolic links
#
# Author: Jan Wielemaker (J.Wielemaker@vu.nl)
################################################################

PACKAGE=semweb
DOC=semweb
include ../Makefile.defs
include common.mk
CFLAGS+= -I.
PKGPLLIBDIR=$(PLBASE)/library/semweb

# Useful alternatives for debugging
# COFLAGS+=-gdwarf-2 -g3 -fno-inline
# COFLAGS=-gdwarf-2 -g3

TARGETS=	rdf_db.@SO@ turtle.@SO@ ntriples.@SO@

RDFDBOBJ=	rdf_db.o atom.o md5.o atom_map.o debug.o \
		hash.o murmur.o query.o resource.o error.o skiplist.o \
		snapshot.o xsd.o

all:		$(TARGETS)

rdf_db.@SO@:	$(RDFDBOBJ)
		$(LD) $(LDSOFLAGS) -o $@ $(RDFDBOBJ) $(LIBS) $(LIBPLSO)
turtle.@SO@:	turtle.o murmur.o
		$(LD) $(LDSOFLAGS) -o $@ turtle.o murmur.o $(LIBS) $(LIBPLSO)
ntriples.@SO@:	ntriples.o
		$(LD) $(LDSOFLAGS) -o $@ ntriples.o $(LIBS) $(LIBPLSO)

turtle.o:	turtle.c turtle_chars.c

install:	$(TARGETS) $(LIBPL)
		mkdir -p $(DESTDIR)$(PKGPLLIBDIR)
		mkdir -p $(DESTDIR)$(SOLIBDIR)
		for f in $(TARGETS); do \
		  $(INSTALL_PROGRAM) $$f $(DESTDIR)$(SOLIBDIR); \
		done
		for f in $(DATA) $(LIBPL); do \
		  $(INSTALL_DATA) $$f $(DESTDIR)$(PKGPLLIBDIR); \
		done
		$(INSTALL_DATA) README.md $(DESTDIR)$(PKGPLLIBDIR)
		$(MKPKGINDEX)
		$(MKINDEX)

ln-install::
		$(MAKE) INSTALL=../ln-install \
			INSTALL_DATA=../ln-install \
			INSTALL_PROGRAM=../ln-install \
			install

rpm-install:	install

html-install::
		mkdir -p $(DESTDIR)$(PKGDOCDIR)
		$(INSTALL) -m 644 $(DOC).html $(DESTDIR)$(PKGDOCDIR)
		$(INSTALL) -m 644 modules.gif $(DESTDIR)$(PKGDOCDIR)

pdf-install::
		mkdir -p $(DESTDIR)$(PKGDOCDIR)
		$(INSTALL) -m 644 $(DOC).pdf $(DESTDIR)$(PKGDOCDIR)

uninstall::
		(cd $(SOLIBDIR) && rm -f $(TARGETS))
		(cd $(PKGPLLIBDIR) && rm -f $(LIBPL))
		$(MKINDEX)

tags::
		etags *.[ch]

rdf_db.o:	unicode_map.c buffer.h error.h
query.o:	buffer.h

################################################################
# Documentation
################################################################

TEXEXTRA=	turtle.tex rdfa.tex rdfcompare.tex \
                rdfportray.tex rdflib.tex sparqlclient.tex rdfdb.tex \
		rdfcache.tex rdfntriples.tex rdf11.tex rdf11containers.tex

$(TEX):		$(TEXEXTRA)

turtle.tex:     turtle.pl
		$(PLTOTEX) --section 'library(semweb/turtle)'
rdfa.tex:	rdfa.pl
		$(PLTOTEX) --section 'library(semweb/rdfa)'
rdfntriples.tex:  rdf_ntriples.pl
		$(PLTOTEX) --section 'library(semweb/rdf_ntriples)'
rdfcompare.tex: rdf_compare.pl
		$(PLTOTEX) --section 'library(semweb/rdf_compare)'
rdfportray.tex: rdf_portray.pl
		$(PLTOTEX) --section 'library(semweb/rdf_portray)'
rdfcache.tex:	rdf_cache.pl
		$(PLTOTEX) --subsection 'library(semweb/rdf_cache)'
rdf11containers.tex:	rdf11_containers.pl
		$(PLTOTEX) --subsubsection 'library(semweb/rdf11_containers)'
sparqlclient.tex:       sparql_client.pl
		$(PLTOTEX) --section 'library(semweb/sparql_client)'
rdfdb.tex:	doc/rdfdb.txt rdf_db.pl
		$(PLTOTEX) --rdfdb --subsection doc/rdfdb.txt
rdf11.tex:	doc/rdf11.txt rdf11.pl
		$(PLTOTEX) --rdf11 --subsection doc/rdf11.txt

################################################################
# Check
################################################################

# To run test_turtle2.pl, ensure that the environment
# variable TEST_TURTLE_MANIFEST points to the W3C RDF-WG Turtle test
# manifest.

check::
		$(PL) -q -f test_rdf_db.pl -g test_rdf_db,halt -t 'halt(1)'
		$(PL) -q -f test_rdf11.pl -g test_rdf11,halt -t 'halt(1)'
		$(PL) -q -f litmap_test.pl -g test,halt -t 'halt(1)'
		$(PL) -q -f test.pl -g run_tests,halt -t 'halt(1)'
		$(PL) -q -f test_con.pl -g run,halt -t 'halt(1)'
		$(PL) -q -f test_subprop.pl -g test_subprop,halt -t 'halt(1)'
		$(PL) -q -f test_turtle.pl -g test_turtle,halt -t 'halt(1)'
		$(PL) -q -f test_turtle2.pl -g test_turtle2,halt -t 'halt(1)'
		$(PL) -q -f test_ntriples.pl -g test_ntriples,halt -t 'halt(1)'

################################################################
# Clean
################################################################

clean:		texclean
		rm -f $(OBJ) *~ *.o *% a.out core config.log

texclean:
		rm -f $(TEX) $(TEXEXTRA) $(DOC).aux $(DOC).log $(DOC).out \
		$(DOC).toc $(DOC).ilg

distclean:	clean
		rm -f $(TARGETS) config.cache config.h config.status Makefile

